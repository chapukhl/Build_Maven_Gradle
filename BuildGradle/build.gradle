group 'com.epam.mp'
version '2.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: "jacoco"

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

findbugs {
    toolVersion = "3.0.0"
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    omitVisitors = ["FindNonShortCircuit"]
}

dependencies {
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.13'
    testCompile 'junit:junit:4.12'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.epam.mp.main.Main'
    }
}


uploadArchives {
    repositories {
        mavenDeployer {
            pom.version = "2.0-SNAPSHOT"
            pom.artifactId = "build-gradle"
            pom.groupId = "com.epam.mp"
            repository(
                    url: "${nexusUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}